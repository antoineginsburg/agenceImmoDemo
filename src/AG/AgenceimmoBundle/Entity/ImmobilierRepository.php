<?php

namespace AG\AgenceimmoBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * immobilierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ImmobilierRepository extends EntityRepository
{
	public function get3LastImmobiliers()
	{
		$qb=$this->createQueryBuilder('i')
		->leftJoin('i.typeimmobilier','t')
		->orderBy('i.dateMel', 'DESC')
		->setMaxResults(3);
		return $qb->getQuery()->getResult();
	}
	public function getImmobiliers($type)
	{
		$qb=$this->createQueryBuilder('i')
		->leftJoin('i.typeimmobilier','t')
		->orderBy('i.dateMel', 'DESC');
		$qb->where($qb->expr()->eq('i.location','?1'));
		if($type=='location'){
			$qb->setParameters(array(1 => '1'));
		}else{
			$qb->setParameters(array(1 => '0'));
		}
		return $qb->getQuery()->getResult();
		
	}
	
	public function searchImmobilier($words){
	
		$qb=$this->createQueryBuilder('i')->leftJoin('i.typeimmobilier','t');
		$taille=count($words);
		
		$cpt1=1;
		while($cpt1<=10 && $cpt1<=$taille){
			$qb->orWhere($qb->expr()->like('i.denomination','?'.($cpt1)));
			$cpt1++;
		}
		
		$cpt2=$cpt1;
		while($cpt2<=20 && $cpt2<=$taille*2){
			$qb->orWhere($qb->expr()->like('t.denomination','?'.($cpt2)));
			$cpt2++;
		}
		
		$cpt3=1;
		while($cpt3<=10 && $cpt3<=$taille){
				$qb->setParameter($cpt3 , "%".$words[$cpt3-1]."%");
			$cpt3++;
		}
		$cpt4=$cpt3;
		while($cpt4<=20 && $cpt4<=$taille*2){
				$qb->setParameter($cpt4 , "%".$words[$cpt4-$cpt3]."%");
			$cpt4++;
		}
		return $qb->getQuery()->getResult();
	
	}
	
	
}
